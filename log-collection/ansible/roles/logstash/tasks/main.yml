---
- name: Download Logstash package locally
  become: no
  get_url:
    url: https://dashbase-public.s3-us-west-1.amazonaws.com/lapp/logstash-{{ logstash_version }}.deb
    dest: roles/logstash/files/logstash-{{ logstash_version }}.deb
    checksum: sha1:2ded8b333f0aedbeacfb6f78c994fd43cb5391e7
  delegate_to: localhost
  run_once: true

- name: Create Directories
  file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: root
    mode: 0755
  with_items:
    - /opt/scripts

- name: Copy Logstash package
  copy:
    src: logstash-{{ logstash_version }}.deb
    dest: /opt/scripts/logstash-{{ logstash_version }}.deb
    owner: root
    group: root
    mode: 0644

- name: Install Logstash
  apt:
    deb: /opt/scripts/logstash-{{ logstash_version }}.deb
    state: present

- name: Copy MySQL java connector
  copy:
    src: mysql-connector-java_8.0.19-1ubuntu16.04_all.deb
    dest: /opt/scripts/mysql-connector-java_8.0.19-1ubuntu16.04_all.deb
    owner: root
    group: root
    mode: 0644

- name: Install MySQL java connector
  apt:
    deb: /opt/scripts/mysql-connector-java_8.0.19-1ubuntu16.04_all.deb
    state: present

- name: Change User of logstash config directory
  file:
    path: /etc/logstash/conf.d
    owner: logstash
    group: logstash
    mode: 0755

## Copy app related config files
- name: Copy Logstash app config files
  template:
    src: "templates/configs/{{ item }}.logstash.conf.j2"
    dest: "/etc/logstash/conf.d/{{ item }}.logstash.conf"
    owner: logstash
    group: logstash
    mode: 0600
  with_items:
    "{{ configs_list }}"

## Copy the Logstash pipeline config file
- name: Copy pipelines.yml file
  template:
    src: pipelines.yml.j2
    dest: /etc/logstash/pipelines.yml
    owner: logstash
    group: logstash
    mode: 0600

- name: Change User of logstash config directory
  file:
    path: /etc/logstash/conf.d
    owner: logstash
    group: logstash
    mode: 0755

- name: Stop Logstash Service
  service:
    name: logstash
    #state: stopped
    state: restarted

- name: Wait for monitoring port to stop listening
  shell: sleep 5

- name: Restart Logstash Service
  service:
    name: logstash
    state: started

- name: Create mysql_statement file
  shell: |-
    echo "SELECT event_index, hostname, event_type, orig_callid, event_text, event_ts, event_time FROM event_$(date +\%Y\%m\%d) WHERE event_type='responder' AND event_index > :sql_last_value">/etc/logstash/conf.d/netsapiens_mysql_statement
  #when: "'netsapiens' in configs_list"

- name: Create cron job to update mysql statement based on current date
  cron:
    name: "logstash restart with new mysql_statement"
    minute: "0"
    hour: "0"
    job: |-
      systemctl stop logstash; rm /etc/logstash/conf.d/.logstash_jdbc_last_run*; echo "SELECT event_index, hostname, event_type, orig_callid, event_text, event_ts, event_time FROM event_$(date +\%Y\%m\%d) WHERE event_type='responder' AND event_index > :sql_last_value">/etc/logstash/conf.d/netsapiens_mysql_statement; systemctl start logstash
  #when: "'netsapiens' in configs_list"
